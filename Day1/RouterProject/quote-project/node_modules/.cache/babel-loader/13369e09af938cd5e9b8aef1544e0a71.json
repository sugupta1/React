{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Day1\\\\RouterProject\\\\quote-project\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, ascending) => {\n  console.log(quotes);\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const queryParam = new URLSearchParams(location.search);\n  const isAssesndeing = queryParam.get('sort') === 'acs';\n  const sortedQuotes = sortQuotes(props.quotes, isAssesndeing);\n\n  const sortingHandler = () => {\n    history.push('/allquotes?sort=' + (isAssesndeing ? 'dec' : 'acs'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sortingHandler,\n        children: [\"Sort \", isAssesndeing ? 'Decsending' : 'Accesending']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: sortedQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"sources":["C:/React/Day1/RouterProject/quote-project/src/components/quotes/QuoteList.js"],"names":["Fragment","useHistory","useLocation","QuoteItem","classes","sortQuotes","quotes","ascending","console","log","sort","quoteA","quoteB","id","QuoteList","props","history","location","queryParam","URLSearchParams","search","isAssesndeing","get","sortedQuotes","sortingHandler","push","sorting","list","map","quote","author","text"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAGA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,SAAOA,MAAM,CAACI,IAAP,CAAY,CAACC,MAAD,EAASC,MAAT,KAAoB;AACrC,QAAIL,SAAJ,EAAe;AACb,aAAOI,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;AACD,KAFD,MAEO;AACL,aAAOF,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;AACD;AACF,GANM,CAAP;AAOD,CATD;;AAUA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,OAAO,GAAGf,UAAU,EAA1B;AACA,QAAMgB,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,UAAU,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAAnB;AACA,QAAMC,aAAa,GAAIH,UAAU,CAACI,GAAX,CAAe,MAAf,MAA2B,KAAlD;AACA,QAAMC,YAAY,GAAGlB,UAAU,CAACU,KAAK,CAACT,MAAP,EAAce,aAAd,CAA/B;;AACA,QAAMG,cAAc,GAAG,MAAI;AACzBR,IAAAA,OAAO,CAACS,IAAR,CAAa,sBAAoBJ,aAAa,GAAG,KAAH,GAAU,KAA3C,CAAb;AACD,GAFD;;AAGA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEjB,OAAO,CAACsB,OAAxB;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEF,cAAjB;AAAA,4BAAuCH,aAAa,GAAG,YAAH,GAAiB,aAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAI,MAAA,SAAS,EAAEjB,OAAO,CAACuB,IAAvB;AAAA,gBACGJ,YAAY,CAACK,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;AAEE,QAAA,EAAE,EAAEA,KAAK,CAAChB,EAFZ;AAGE,QAAA,MAAM,EAAEgB,KAAK,CAACC,MAHhB;AAIE,QAAA,IAAI,EAAED,KAAK,CAACE;AAJd,SACOF,KAAK,CAAChB,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA1BD;;GAAMC,S;UACYb,U,EACCC,W;;;KAFbY,S;AA4BN,eAAeA,SAAf","sourcesContent":["import { Fragment } from 'react';\nimport { useHistory,useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\n\nconst sortQuotes = (quotes, ascending) => {\n  console.log(quotes)\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParam = new URLSearchParams(location.search);\n  const isAssesndeing  = queryParam.get('sort') === 'acs';\n  const sortedQuotes = sortQuotes(props.quotes,isAssesndeing)\n  const sortingHandler = ()=>{\n    history.push('/allquotes?sort='+(isAssesndeing ? 'dec' :'acs'));\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortingHandler}>Sort {isAssesndeing ? 'Decsending' :'Accesending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"]},"metadata":{},"sourceType":"module"}