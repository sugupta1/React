{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Day1\\\\RouterProject\\\\quote-project\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  console.log(location); //const queryParam = new URLSearchParams();\n\n  const sortingHandler = () => {\n    history.push('/allquotes?sort=acs');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sortingHandler,\n        children: \"Sort Accesending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"sources":["C:/React/Day1/RouterProject/quote-project/src/components/quotes/QuoteList.js"],"names":["Fragment","useHistory","useLocation","QuoteItem","classes","QuoteList","props","history","location","console","log","sortingHandler","push","sorting","list","quotes","map","quote","id","author","text"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAH2B,CAI3B;;AACA,QAAMG,cAAc,GAAG,MAAI;AACzBJ,IAAAA,OAAO,CAACK,IAAR,CAAa,qBAAb;AACD,GAFD;;AAGA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAER,OAAO,CAACS,OAAxB;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEF,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAI,MAAA,SAAS,EAAEP,OAAO,CAACU,IAAvB;AAAA,gBACGR,KAAK,CAACS,MAAN,CAAaC,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;AAEE,QAAA,EAAE,EAAEA,KAAK,CAACC,EAFZ;AAGE,QAAA,MAAM,EAAED,KAAK,CAACE,MAHhB;AAIE,QAAA,IAAI,EAAEF,KAAK,CAACG;AAJd,SACOH,KAAK,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzBD;;GAAMb,S;UACYJ,U,EACCC,W;;;KAFbG,S;AA2BN,eAAeA,SAAf","sourcesContent":["import { Fragment } from 'react';\nimport { useHistory,useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  console.log(location);\n  //const queryParam = new URLSearchParams();\n  const sortingHandler = ()=>{\n    history.push('/allquotes?sort=acs');\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortingHandler}>Sort Accesending</button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"]},"metadata":{},"sourceType":"module"}