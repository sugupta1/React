{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\n\nconst useHttp = (requestConfig, applyData) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async () => {\n    console.log(\"4\");\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      //   const response = await fetch(\n      //     requestConfig.URL,{\n      //         method:requestConfig.method ?requestConfig.method :'GET',\n      //         headers:requestConfig.headers ? requestConfig.headers :{},\n      //         body:requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      //     }\n      //   );\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method,\n        headers: requestConfig.headers,\n        body: JSON.stringify(requestConfig.body)\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      console.log(\"3\");\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  });\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\n\nexport default useHttp;","map":{"version":3,"sources":["C:/React/Day1/CustomHooks/custom-hookApp/src/components/hooks/use-http.js"],"names":["useState","useCallback","useHttp","requestConfig","applyData","isLoading","setIsLoading","error","setError","sendRequest","console","log","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"mappings":";;AAAA,SAAQA,QAAR,EAAiBC,WAAjB,QAAmC,OAAnC;;AACA,MAAMC,OAAO,GAAG,CAACC,aAAD,EAAgBC,SAAhB,KAA4B;AAAA;;AAC1C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMS,WAAW,GAAGR,WAAW,CAAE,YAAY;AAC3CS,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACV,aAAa,CAACW,GAAf,EAAoB;AAC5CC,QAAAA,MAAM,EAAEZ,aAAa,CAACY,MADsB;AAE5CC,QAAAA,OAAO,EAAEb,aAAa,CAACa,OAFqB;AAG5CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAehB,aAAa,CAACc,IAA7B;AAHsC,OAApB,CAA5B;;AAMF,UAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAP,MAAAA,SAAS,CAACkB,IAAD,CAAT;AAED,KAtBD,CAsBE,OAAOE,GAAP,EAAY;AACZhB,MAAAA,QAAQ,CAACgB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDnB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACC,GA9B4B,CAA/B;AA+BE,SAAO;AAACD,IAAAA,SAAD;AACCE,IAAAA,KADD;AAECE,IAAAA;AAFD,GAAP;AAIH,CAvCD;;GAAMP,O;;AAwCN,eAAeA,OAAf","sourcesContent":["import {useState,useCallback} from 'react';\r\nconst useHttp = (requestConfig, applyData)=>{\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = useCallback (async () => {\r\n    console.log(\"4\");\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n    //   const response = await fetch(\r\n    //     requestConfig.URL,{\r\n    //         method:requestConfig.method ?requestConfig.method :'GET',\r\n    //         headers:requestConfig.headers ? requestConfig.headers :{},\r\n    //         body:requestConfig.body ? JSON.stringify(requestConfig.body) : null\r\n    //     }\r\n    //   );\r\n        const response = await fetch(requestConfig.url, {\r\n            method: requestConfig.method,\r\n            headers: requestConfig.headers,\r\n            body: JSON.stringify(requestConfig.body),\r\n          });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Request failed!');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"3\");\r\n      applyData(data)\r\n\r\n    } catch (err) {\r\n      setError(err.message || 'Something went wrong!');\r\n    }\r\n    setIsLoading(false);\r\n    });\r\n    return {isLoading,\r\n            error,\r\n            sendRequest,\r\n        };\r\n};\r\nexport default useHttp; "]},"metadata":{},"sourceType":"module"}