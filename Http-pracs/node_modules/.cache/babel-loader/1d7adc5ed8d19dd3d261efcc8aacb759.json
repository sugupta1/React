{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Http-pracs\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [movieDetails, setMoviesDetails] = useState([]);\n  const [isLoding, setLoding] = useState(false);\n  const [error, setError] = useState(null); // const movieHandler = ()=>{\n  //   fetch(\"https://swapi.dev/api/films/\")\n  //     .then((responce)=>{\n  //       return responce.json();\n  //     })\n  //     .then((data)=>{\n  //       const trasformMovieData = data.results.map((movieData)=>{\n  //         return {\n  //             id: movieData.episode_id,\n  //             title: movieData.title,\n  //             openingText: movieData.opening_crawl,\n  //             releaseDate: movieData.release_date\n  //         };\n  //       });\n  //       setMoviesDetails(trasformMovieData)\n  //     })\n\n  const movieHandler = async () => {\n    try {\n      const responce = await fetch(\"https://swapi.dev/api/films/\");\n\n      if (!responce.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const data = await responce.json();\n      const trasformMovieData = data.results.map(movieData => {\n        setLoding(true);\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMoviesDetails(trasformMovieData);\n    } catch {\n      setError(Error.message);\n    }\n\n    setLoding(false);\n  };\n\n  let content = \"\";\n\n  if (movieDetails.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movieDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error !== null) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (!isLoding && movieDetails.length < 0) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: movieHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movieDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HRGPA7uwu7ASU6vFIbNNMsr7ir4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/React/Http-pracs/src/App.js"],"names":["React","useState","MoviesList","App","movieDetails","setMoviesDetails","isLoding","setLoding","error","setError","movieHandler","responce","fetch","ok","Error","data","json","trasformMovieData","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","content","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,gBAAf,IAAmCJ,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACK,QAAD,EAAYC,SAAZ,IAAyBN,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC,CAHa,CAKb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMS,YAAY,GAAG,YACrB;AACE,QAAG;AACD,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;;AACA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACE,YAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAa;AACtDb,QAAAA,SAAS,CAAC,IAAD,CAAT;AACA,eAAO;AACHc,UAAAA,EAAE,EAAED,SAAS,CAACE,UADX;AAEHC,UAAAA,KAAK,EAAEH,SAAS,CAACG,KAFd;AAGHC,UAAAA,WAAW,EAAEJ,SAAS,CAACK,aAHpB;AAIHC,UAAAA,WAAW,EAAEN,SAAS,CAACO;AAJpB,SAAP;AAMD,OARyB,CAA1B;AASFtB,MAAAA,gBAAgB,CAACY,iBAAD,CAAhB;AACD,KAhBD,CAiBA,MAAK;AACHR,MAAAA,QAAQ,CAACK,KAAK,CAACc,OAAP,CAAR;AACD;;AACDrB,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAvBD;;AAyBA,MAAIsB,OAAO,GAAG,EAAd;;AACA,MAAGzB,YAAY,CAAC0B,MAAb,GAAsB,CAAzB,EAA2B;AACzBD,IAAAA,OAAO,gBAAI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEzB;AAApB;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AACD,MAAGI,KAAK,KAAK,IAAb,EAAkB;AAChBqB,IAAAA,OAAO,gBAAG;AAAA,gBAAIrB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AACD,MAAG,CAACF,QAAD,IAAaF,YAAY,CAAC0B,MAAb,GAAsB,CAAtC,EAAwC;AACtCD,IAAAA,OAAO,gBAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AACD;;AAED,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEnB,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEN;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GApEQD,G;;KAAAA,G;AAsET,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movieDetails, setMoviesDetails] = useState([]);\n  const [isLoding , setLoding] = useState(false);\n  const [error, setError] = useState(null);\n\n  // const movieHandler = ()=>{\n  //   fetch(\"https://swapi.dev/api/films/\")\n  //     .then((responce)=>{\n  //       return responce.json();\n  //     })\n  //     .then((data)=>{\n  //       const trasformMovieData = data.results.map((movieData)=>{\n  //         return {\n  //             id: movieData.episode_id,\n  //             title: movieData.title,\n  //             openingText: movieData.opening_crawl,\n  //             releaseDate: movieData.release_date\n  //         };\n  //       });\n  //       setMoviesDetails(trasformMovieData)\n  //     })\n\n  const movieHandler = async ()=>\n  {\n    try{\n      const responce = await fetch(\"https://swapi.dev/api/films/\");\n      if(!responce.ok){\n        throw new Error('Something went wrong');\n      }\n      const data = await responce.json();  \n        const trasformMovieData = data.results.map((movieData)=>{\n          setLoding(true);\n          return {\n              id: movieData.episode_id,\n              title: movieData.title,\n              openingText: movieData.opening_crawl,\n              releaseDate: movieData.release_date\n          };\n        });\n      setMoviesDetails(trasformMovieData);\n    }\n    catch{\n      setError(Error.message);\n    }\n    setLoding(false);\n  }\n\n  let content = \"\";\n  if(movieDetails.length > 0){\n    content =  <MoviesList movies={movieDetails} />\n  }\n  if(error !== null){\n    content = <p>{error}</p>\n  }\n  if(!isLoding && movieDetails.length < 0){\n    content= <p>Loading...</p>\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={movieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movieDetails} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}